knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# turn off sci notation
options(scipen=999)
library(tidyverse)
# if needed, install tidycensus, then load it.
install.packages("tidycensus")
library(tidycensus)
#census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
#census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
sf1 <- load_variables(2010, "sf1", cache = TRUE)
View(sf1)
sf1 <- load_variables(2010, "sf1", cache = TRUE)
View(sf1)
sf3 <- load_variables(2000, "sf3", cache = TRUE)
View(sf3)
p00 <- get_decennial(geography = "state", variables = "P001001", year = 2000)
p10 <- get_decennial(geography = "state", variables = "P001001", year = 2010)
#census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
knitr::opts_chunk$set(echo = TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
# turn off sci notation
options(scipen=999)
library(tidyverse)
# if needed, install tidycensus, then load it.
install.packages("tidycensus")
library(tidycensus)
knitr::opts_chunk$set(echo = TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
sf1 <- load_variables(2010, "sf1", cache = TRUE)
View(sf1)
sf3 <- load_variables(2000, "sf3", cache = TRUE)
sf3 <- load_variables(2000, "sf3", cache = TRUE)
p00 <- get_decennial(geography = "state", variables = "P001001", year = 2000)
p10 <- get_decennial(geography = "state", variables = "P001001", year = 2010)
p10
p10 |> select(GEOID, NAME, value) |> rename(Population2010=value) -> p10
p00 |> select(GEOID, NAME, value) |> rename(Population2000=value) -> p00
alldata <- p00 |> inner_join(p10)
alldata |> mutate(change = ((Population2010-Population2000)/Population2000)*100) |> arrange(desc(change))
pl <- load_variables(2020, "pl")
View(pl)
md <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
state = "MD",
year = 2021)
md <- md |> arrange(desc(estimate)) |> top_n(20, estimate)
md
md |>
mutate(NAME = gsub(" County, Maryland", "", NAME)) |>
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red") +
labs(title = "Household income by county in Maryland",
subtitle = "2017-2021 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
md21 <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
state = "MD",
year = 2021)
md10 <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
state = "MD",
year = 2010)
md10 |>
# join md10 to md21 using the shared GEOID and NAME columns
inner_join(md21, by=c("GEOID", "NAME")) |>
# rename the first estimate to clarify that it's from 2010 and the second estimate to clarify that it's from 2021
rename(estimate2010=estimate.x, estimate2021=estimate.y) |>
mutate(min2010 = estimate2010-moe.x, max2010 = estimate2010+moe.x, min2020 = estimate2021-moe.y, max2021 = estimate2021+moe.y) |>
select(-variable.x, -variable.y, -moe.x, -moe.y) |>
mutate(change = ((estimate2021-estimate2010)/estimate2010)*100) |>
arrange(desc(change))
md_high_schools <- read_csv("data/md_high_schools.csv") |>
mutate(zip = as.character(zip))
md_zipcodes <- get_acs(geography="zcta", variables = "B19013_001", state='MD', year=2019)
md_high_schools_with_acs <- md_high_schools |> left_join(md_zipcodes, by=c('zip'='GEOID'))
md_high_schools_with_acs <- md_high_schools_with_acs |> mutate(min=(estimate-moe), max=(estimate+moe)) |> drop_na()
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled <= 40) |>
summarize(avg_income = mean(estimate), count = n())
View(md_high_schools)
View(md_high_schools_with_acs)
md_zipcodes <- get_acs(geography="zcta", variables = "B19013_001", state='MD', year=2019)
md_high_schools_with_acs <- md_high_schools |> left_join(md_zipcodes, by=c('zip'='GEOID'))
md_high_schools_with_acs <- md_high_schools_with_acs |> mutate(min=(estimate-moe), max=(estimate+moe)) |> drop_na()
View(md_high_schools_with_acs)
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled <= 40) |>
summarize(avg_income = mean(estimate), count = n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60)# |>
#summarize(avg_income = mean(estimate), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled <= 40) #|>
# summarize(avg_income = mean(estimate), count = n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate) #, count =n())
md_high_schools_with_acs |>
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate) #, count =n())
md_high_schools_with_acs |>
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate) # count =n())
md_high_schools_with_acs |>
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)) # count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled <= 40) |>
summarize(avg_income = mean(estimate)) # count = n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)), count =n()))
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)) count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate)), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled >= 60) |>
summarize(avg_income = mean(estimate), count =n())
md_high_schools_with_acs |>
filter(percent_of_high_school_graduates_enrolled <= 40) |>
summarize(avg_income = mean(estimate), count = n())
