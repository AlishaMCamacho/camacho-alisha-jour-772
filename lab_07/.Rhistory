knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse.
library(tidyverse)
library(tidycensus)
census_api_key()
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
census_api_key()
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd")
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install=TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", overwrite =TRUE)
overwrite=TRUE
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", overwrite =TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install = TRUE, overwrite =TRUE)
census_api_key("a0c53f3750a5b78a93b8b40993886ff655a3d0fd", install = TRUE, overwrite =TRUE)
readRenviron("~/.Renviron")
readRenviron("~/.Renviron")
readRenviron("~/.Renviron") |>
readRenviron("~/.Renviron")
acs2021 <- get_acs("asc5")
get_acs()
get_acs(5)
acs2021 <- load_variables(2021, "acs5")
head(variables_list)
acs_variables_2021 <- load_variables(2021, "acs5")
head(acs_variables_2021)
acs_variables_2021 <- load_variables(2021, "acs5")
glimpse(acs_variables_2021)
View(acs_variables_2021)
View(acs_variables_2021)
View(acs_variables_2021)
md <- get_acs(geography ="county",
variables = c(median_age = B07402_001),
state = "MD",
year = 2020)
md <- get_acs(geography ="county",
variables = c(median_age = "B07402_001"),
state = "MD",
year = 2020)
md
md <- get_acs(geography ="county",
variables = c(median_age = "B07402_001"),
state = "MD",
year = 2021)
md |>
md <- get_acs(geography ="county",
variables = c(median_age = "B07402_001"),
state = "MD",
year = 2021)
md <- get_acs(geography ="county",
variables = c(median_age = "B07402_001"),
state = "MD",
year = 2021)
md
md <- get_acs(geography ="county",
variables = c(median_age = "B07402_001"),
state = "MD",
year = 2021)
md |>
clean_names()
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse.
library(tidyverse)
library(tidycensus)
library(refinr)
library(lubridate)
library(janitor)
md |>
clean_names()
md |>
clean_names() |>
arrange(estimate)
md |>
clean_names() |>
filter(estimate >= "50") |>
arrange(estimate)
montgomery_od_2022 <- read_csv(Users/AlishaCamacho/Documents/GitHub/camacho-alisha-jour-772/lab_07/data/montgomery_2022_overdoses.csv)
montgomery_od_2022 <- read_csv(AlishaCamacho/Documents/GitHub/camacho-alisha-jour-772/lab_07/data/montgomery_2022_overdoses.csv)
montgomery_od_2022 <- read_csv("Users/AlishaCamacho/Documents/GitHub/camacho-alisha-jour-772/lab_07/data/montgomery_2022_overdoses.csv")
montgomery_od_2022 <- read_csv('/Users/AlishaCamacho/Documents/GitHub/camacho-alisha-jour-772/lab_07/data/montgomery_2022_overdoses.csv')
montgomery_od_2022 <- read_csv('/Users/AlishaCamacho/Documents/GitHub/camacho-alisha-jour-772/lab_07/data/montgomery_2022_overdoses.csv')
montgomery_od_2022
View(acs_variables_2021)
acs_variables_2021 |>
filter(geography = "county")
acs_variables_2021 |>
filter(geography == "county")
acs_variables_2021_county |>
filter(geography == "county")
acs_variables_2021 |>
filter(geography == "county")
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
View(acs_variables_2021_county)
View(acs_variables_2021)
View(acs_variables_2021)
View(acs_variables_2021)
View(acs_variables_2021_county)
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
md_age <- md <- get_acs(geography ="county",
variables = c(age = "B07401_001"),
state = "MD",
year = 2022)
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
md_age <- md <- get_acs(geography ="county",
variables = c(age = "B07401_001"),
state = "MD",
year = 2021)
md_age
View(acs_variables_2021)
View(acs_variables_2021_county)
md <- get_acs(geography ="county",
variables = c(median_age = #B07401_004", "B07401_005", "B07401_006", B07401_007", "B07401_008" "B07401_009", "B07401_010", "B07401_011", "B07401_012", "B07401_013", "B07401_01", "B07401_015", "B07401_016"),
state = "MD",
md <- get_acs(geography = "county",
variables = c("B07401_004", "B07401_005", "B07401_006", "B07401_007", "B07401_008", "B07401_009", "B07401_010", "B07401_011", "B07401_012", "B07401_013", "B07401_014", "B07401_015", "B07401_016"),
state = "MD",
year = 2021)
md <- get_acs(geography = "county",
variables = c("B07401_004", "B07401_005", "B07401_006", "B07401_007", "B07401_008", "B07401_009", "B07401_010", "B07401_011", "B07401_012", "B07401_013", "B07401_014", "B07401_015", "B07401_016"),
state = "MD",
year = 2021)
md
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
md_age <- md <- get_acs(geography ="county",
variables = c(age = "B07401_001"),
state = "MD",
year = 2021)
md_age
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
md_age <- get_acs(geography = "county",
variables = c("B07401_004", "B07401_005", "B07401_006", "B07401_007", "B07401_008", "B07401_009", "B07401_010", "B07401_011", "B07401_012", "B07401_013", "B07401_014", "B07401_015", "B07401_016"),
state = "MD",
year = 2021)
acs_variables_2021_county <- acs_variables_2021 |>
filter(geography == "county")
md_age <- get_acs(geography = "county",
variables = c("B07401_004", "B07401_005", "B07401_006", "B07401_007", "B07401_008", "B07401_009", "B07401_010", "B07401_011", "B07401_012", "B07401_013", "B07401_014", "B07401_015", "B07401_016"),
state = "MD",
year = 2021)
md_age
acs_variables_2021 <- load_variables(2021, "acs5", = TRUE)
acs_variables_2021 <- load_variables(2021, "acs5", == TRUE)
acs_variables_2021 <- load_variables(2021, "acs5", cache = TRUE)
glimpse(acs_variables_2021)
acs_variables_2021 <- load_variables(2021, "acs5", cache = TRUE)
glimpse(acs_variables_2021)
acs_variables_2021  |>
filter(str_detect(label, "18")) |>
filter(!str_detect(concept, "citizenship"))
acs_variables_2021  |>
filter(str_detect(label, "18")) |>
filter(!str_detect(concept, "citizenship"))
acs_variables_2021
acs_variables_2021  |>
filter(str_detect(label, "18 and over")) |>
filter(!str_detect(concept, "citizenship"))
acs_variables_2021
acs_variables_2021  |>
filter(str_detect(label, "18")) |>
filter(!str_detect(concept, "female", "male", citizenship"))
acs_variables_2021
acs_variables_2021  |>
filter(str_detect(label, "18")) |>
filter(!str_detect(concept, "citizenship" | "female" | "male"))
acs_variables_2021  |>
filter(str_detect(label, "18")) |>
filter(!str_detect(concept, "citizenship","female","male")
)
acs_variables_2021  |>
filter(str_detect(label, "living arrangements of adults")) |>
filter(!str_detect(concept, "citizenship")
)
acs_variables_2021  |>
filter(str_detect(label, "living arrangements of adults")) |>
filter(!str_detect(concept, "citizenship")
)
acs_variables_2021
acs_variables_2021  |>
filter(str_detect (label = c(
"living arrangements of adults"))) |>
filter(!str_detect(concept =C(
"CITIZENSHIP", "WHITE ALONE")
))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(refinr)
library(janitor)
library(lubridate)
install.packages("readxl")
library(readxl)
library(datasets)
read_excel("/Users/AlishaCamacho/Documents/GitHub/Reverse_Engineering_Project/Data/Missing-Kids-Summary-File.xlsx"")
read_excel("/Users/AlishaCamacho/Documents/GitHub/Reverse_Engineering_Project/Data/Missing-Kids-Summary-File.xlsx")
missing_kids <- read_excel("/Users/AlishaCamacho/Documents/GitHub/Reverse_Engineering_Project/Data/Missing-Kids-Summary-File.xlsx")
View(missing_kids)
# Put code to reverse engineer sentence here
#Disclaimer: we used Chat GPT to help convert the state name column to state.abbreviations, so we could use the filter we wrote previously to plug in here: https://chat.openai.com/share/e71c807b-9b31-424d-986c-c591d053ef26
population_by_age <- read_csv("/Users/AlishaCamacho/Documents/GitHub/Reverse_Engineering_Project/Data/population-by-age.csv") |>
mutate(state_title = str_to_title(state)) |>
mutate(state_abbrev = state.abb[match(state_title, state.name)]) |>
rename(state_full = "state") |>
rename(state = "state_abbrev") |>
filter(state =="CA"| state=="NY" | state=="LA" | state=="NC"| state=="WA"| state=="CO" | state=="GA" | state=="MN" | state=="WI" | state=="NH" | state=="MA" | state=="MT" | state=="DE"| state=="ND" | state=="DC" | state=="SD" | state=="SC" | state=="NE" | state=="RI" | state=="TN" | state=="PA" | state=="FL") |>
arrange(est_date)
#glimpse(population_by_age)
# Display results of code below this codeblock
# Put code to reverse engineer sentence here
#Disclaimer: we used Chat GPT to help convert the state name column to state.abbreviations, so we could use the filter we wrote previously to plug in here: https://chat.openai.com/share/e71c807b-9b31-424d-986c-c591d053ef26
population_by_age <- read_csv("/Users/AlishaCamacho/Documents/GitHub/Reverse_Engineering_Project/Data/population-by-age.csv") |>
mutate(state_title = str_to_title(state)) |>
mutate(state_abbrev = state.abb[match(state_title, state.name)]) |>
rename(state_full = "state") |>
rename(state = "state_abbrev") |>
filter(state =="CA"| state=="NY" | state=="LA" | state=="NC"| state=="WA"| state=="CO" | state=="GA" | state=="MN" | state=="WI" | state=="NH" | state=="MA" | state=="MT" | state=="DE"| state=="ND" | state=="DC" | state=="SD" | state=="SC" | state=="NE" | state=="RI" | state=="TN" | state=="PA" | state=="FL") |>
arrange(est_date)
glimpse(population_by_age)
# Display results of code below this codeblock
